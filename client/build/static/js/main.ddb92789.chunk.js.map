{"version":3,"sources":["components/Table/Table.js","components/InfoContext.js","components/ScoreContext.js","components/Scoreboard/Scoreboard.js","components/Rooms.js","components/symbols/Squiggles.js","components/symbols/Diamonds.js","components/symbols/Ovals.js","components/symbols/Symbols.js","components/Card/Card.js","components/Game.js","App.js","index.js"],"names":["socket","InfoContext","createContext","InfoProvider","props","useState","nickName","setNickName","Provider","value","children","ScoreContext","ScoreProvider","name","score","setScore","Scoreboard","useContext","className","map","e","id","key","Rooms","history","placeholder","type","onChange","target","autoComplete","onClick","preventDefault","push","Squiggles","stroke","fillStyle","width","viewBox","fill","transform","d","strokeWidth","StripedSquiggles","Diamonds","StripedDiamonds","Ovals","StripedOvals","Symbols","output","color","symbol","Card","card","click","out","i","quantity","Table","deck","setDeck","selected","setSelected","winnerName","setWinnnerName","useEffect","io","emit","data","alert","animate","classList","remove","offsetWidth","add","on","ids","newCards","scoreboard","element","document","getElementById","filter","length","users","console","log","querySelector","style","display","off","answer","forEach","el","prefix","sufix","isAlredySelected","selectCard","Game","App","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.ddb92789.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Table.css';\r\nimport Card from '../Card/Card';\r\nimport {InfoContext} from '../InfoContext';\r\nimport {ScoreContext} from '../ScoreContext';\r\n\r\nlet socket;\r\n\r\nconst Table = ({history}) =>{\r\n    const [deck, setDeck] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n    const [winnerName, setWinnnerName] = useState('twoj stary');\r\n    const [nickName, setNickName] = useContext(InfoContext); \r\n    const [score, setScore] = useContext(ScoreContext);\r\n    const ENDPOINT = 'localhost:4000';\r\n\r\n    useEffect(()=>{\r\n        socket = io(ENDPOINT);\r\n        socket.emit('init', nickName, (data) =>{\r\n           if(data === 'error'){\r\n                alert('user with this name already exists!!');\r\n                history.push('/');\r\n            }\r\n            else setDeck(data);\r\n\r\n        });\r\n    },[ENDPOINT]);\r\n\r\n    const animate = (e) =>{\r\n        e.classList.remove(\"movements\");\r\n        void e.offsetWidth;\r\n        e.classList.add(\"movements\");\r\n    }\r\n\r\n    useEffect(() =>{\r\n        \r\n        socket.on('setFound', ({ids, newCards, scoreboard}) =>{    \r\n            setScore(scoreboard);\r\n            if(newCards!=null) \r\n            setDeck(deck.map(element => {\r\n                const e = document.getElementById(element.id);\r\n                if(element.id === ids[0]) {\r\n                    animate(e);\r\n                    return newCards[0];\r\n                }\r\n                else if(element.id === ids[1]) {\r\n                    animate(e);\r\n                    return newCards[1];\r\n                }\r\n                else if(element.id === ids[2]){\r\n                    animate(e);\r\n                    return newCards[2];\r\n                }\r\n                else return element;\r\n            }));\r\n            else setDeck(deck.filter(e=>{\r\n                return e.id!== ids[0] && e.id!== ids[1] && e.id!== ids[2];\r\n            }));\r\n        });\r\n        \r\n        socket.on('moreCards', newCards=>{\r\n            deck.length==12\r\n            ? setDeck([...newCards, ...deck])\r\n            : setDeck([...deck, ...newCards]);\r\n        });\r\n        \r\n        socket.on('newUser', users=>{\r\n            setScore(users);\r\n        });\r\n        \r\n        socket.on('gameEnd', name =>{\r\n                setWinnnerName(name);         \r\n                console.log(winnerName);\r\n                document.querySelector(\".winner\").style.display = \"block\";            \r\n        });\r\n        \r\n        return () => {\r\n            socket.off();\r\n        }\r\n    }, [deck]);\r\n    \r\n    useEffect(()=>{\r\n        \r\n        if(selected.length === 3){ \r\n            socket.emit('trySet', {ids:selected, nickName}, (answer)=>{\r\n                answer ? \r\n                alert('good')\r\n                : alert('bad');\r\n            });\r\n            selected.forEach(el=>{\r\n                document.getElementById(el).classList.remove('selectedCard');\r\n            });\r\n            setSelected([]);\r\n        }\r\n    },[selected]);\r\n    \r\n    function selectCard(id) {\r\n        let isAlredySelected = false;\r\n        selected.forEach(element=>{\r\n            if(element === id) isAlredySelected=true;\r\n        });\r\n        if(isAlredySelected){\r\n            setSelected( selected.filter(element=> {return element!==id}) );\r\n            document.getElementById(id).classList.remove('selectedCard');\r\n        }\r\n        else {\r\n            setSelected([...selected, id]);\r\n            document.getElementById(id).classList.add('selectedCard');\r\n        }\r\n    };\r\n\r\n    const randomF = () =>{\r\n        socket.emit('noMoreSet');\r\n    }\r\n\r\n    let prefix = [];\r\n    if(deck.length<=12) prefix = [<div></div>, <div></div>, <div></div>];  \r\n    let sufix = [];  \r\n    if(deck.length<=15) sufix = [<div></div>, <div></div>, <div></div>]; \r\n\r\n    return(\r\n        <div className='Table'>\r\n        <button onClick={randomF} >Więcej</button>\r\n            {prefix}\r\n\r\n            {deck.map(\r\n                (card, i)=>\r\n                        <Card key={i} card={card} click={()=>selectCard(card.id)} /> \r\n            )}\r\n\r\n            {sufix}\r\n        <div  className='winner'> <div className='center'>  <div className='winnerSubtext'>the winner is:</div>{winnerName}</div>  </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Table;","import React, {useState, createContext} from 'react';\r\n\r\nexport const InfoContext = createContext();\r\n\r\nexport const InfoProvider = props => {\r\n    const [nickName, setNickName] = useState(null);\r\n    \r\n    return(\r\n        <InfoContext.Provider value={[nickName, setNickName]}>\r\n            {props.children}\r\n        </InfoContext.Provider>\r\n    );\r\n} ;","import React, {useState, createContext} from 'react';\r\n\r\nexport const ScoreContext = createContext();\r\n\r\nexport const ScoreProvider = props => {\r\n    const [score, setScore] = useState([{name: null, score: 0}]);\r\n    \r\n    return(\r\n        <ScoreContext.Provider value={[score, setScore]}>\r\n            {props.children}\r\n        </ScoreContext.Provider>\r\n    );\r\n} ;","import React, {useState, useContext} from 'react';\r\nimport './Scoreboard.css';\r\nimport {InfoContext} from '../InfoContext';\r\nimport {ScoreContext} from '../ScoreContext';\r\n\r\nconst Scoreboard = () =>{\r\n    const [nickName, setNickName] = useContext(InfoContext); \r\n    const [score, setScore] = useContext(ScoreContext); \r\n\r\n    return(\r\n        <div className='Scoreboard' >\r\n            <h2 className='hs'>Scoreboard</h2>\r\n                {score.map((e, id)=>{\r\n                    {if(e.name===nickName) return <div key={id} className='u'> {(id+1) + '. ' + e.name + ' ' + e.score} </div>}\r\n\r\n                    return <div key={id}> {(id+1) + '. ' + e.name + ' ' + e.score} </div>\r\n                })}\r\n            \r\n         </div>\r\n    )\r\n}\r\nexport default Scoreboard;","import React, {useState, useContext} from 'react';\r\nimport {InfoContext} from './InfoContext';\r\nimport Scoreboard from './Scoreboard/Scoreboard';\r\nimport './Rooms.css';\r\n\r\nconst Rooms = ({history}) =>{\r\n    const [nickName, setNickName] = useContext(InfoContext);\r\n    \r\n    const inputUpdate = e => {\r\n        setNickName(e.target.value);\r\n    }\r\n    \r\n    const buttonClick = (e) =>{\r\n        e.preventDefault();\r\n        history.push('/game');\r\n    }\r\n\r\n\r\n   return (\r\n    <div className='Rooms'>\r\n        <form className='formBox'>\r\n            <h1>Join the game</h1>  \r\n\r\n                <input placeholder='nickname' type=\"text\" id='loginy' onChange={inputUpdate} autoComplete='off' />\r\n            \r\n                <input  placeholder='room' type=\"text\" />\r\n\r\n                <button className='goButton' onClick={buttonClick}>Play</button>\r\n           \r\n        </form>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Rooms;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Squiggles = ({stroke, fillStyle}) =>{\r\nreturn(\r\n    <svg width=\"250%\" viewBox=\"0 0 200 100\" stroke={stroke} fill={fillStyle}>\r\n    <g transform=\"translate(0,-197)\">\r\n    <path className='pathClass' d=\"m27.228 295.19s-21.874-1.2684-21.064-42.281c0.81019-41.013 28.76-50.315 50.229-49.469 21.469 0.84566 47.798 14.376 66.026 17.335\r\n    18.228 2.9597 53.874-21.141 54.684-21.986 0.81009-0.84567 13.367-1.2684 17.013 27.483 3.6456 28.751-25.114 61.308-59.545\r\n    60.462-34.431-0.84568-39.697-15.644-60.355-15.644-20.659 0-46.988 24.1-46.988 24.1z\" strokeWidth=\"4px\"/>\r\n    </g></svg>\r\n)}\r\n\r\nconst StripedSquiggles = ({stroke, fillStyle}) =>{\r\nreturn(\r\n    <svg  width=\"250%\" viewBox=\"0 0 200 100\" stroke={stroke} fill={fillStyle}>\r\n        <g transform=\"translate(0,-197)\" strokeWidth=\"1.5px\">\r\n        <path className='pathClass' d=\"m26.457 295.18s-21.874-1.2684-21.064-42.281c0.81019-41.013 28.76-50.315 50.229-49.469 21.469 0.84566 47.798 14.376 66.026 17.335 18.228 2.9597 53.874-21.141 54.684-21.986 0.81009-0.84567 13.367-1.2684 17.013 27.483 3.6456 28.751-25.114 61.308-59.545 60.462-34.431-0.84568-39.697-15.644-60.355-15.644-20.659 0-46.988 24.1-46.988 24.1z\" strokeWidth=\"2.317px\"/>\r\n        <path className='pathClass' d=\"m6.0113 257.53 101.01-40.946\" />\r\n        <path className='pathClass' d=\"m6.1735 265.82 111.97-45.859\" />\r\n        <path className='pathClass' d=\"m7.8577 272.23 175.85-70.806\" />\r\n        <path className='pathClass' d=\"m8.8642 279.56 179.25-71.562\" />\r\n        <path className='pathClass' d=\"m13.061 285.87 177.55-70.995\" />\r\n        <path className='pathClass' d=\"m64.504 272.25 127.66-51.34\" />\r\n        <path className='pathClass' d=\"m80.506 272.19 112.73-44.914\"/>\r\n        <path className='pathClass' d=\"m90.625 275.3 103.28-40.379\" />\r\n        <path className='pathClass' d=\"m99.869 279.67 93.263-36.788\" />\r\n        <path className='pathClass' d=\"m108.91 283.27 81.735-31.496\" />\r\n        <path className='pathClass' d=\"m119.68 285.53 63.592-25.449\" />\r\n        <path className='pathClass' d=\"m6.6632 248.68 88.538-35.465\" />\r\n        <path className='pathClass' d=\"m131.77 287.42 42.047-16.377\" />\r\n        <path className='pathClass' d=\"m7.2302 238.85 77.577-28.85\" />\r\n        <path className='pathClass' d=\"m9.498 230.73 64.348-24.504\" />\r\n        <path className='pathClass' d=\"m13.089 222.22 47.15-18.267\" />\r\n        <path className='pathClass' d=\"m16.68 291.01 51.496-20.346\" />\r\n        </g></svg>\r\n)}\r\n\r\nexport {Squiggles, StripedSquiggles};","import React from 'react';\r\n\r\nconst Diamonds = ({stroke, fillStyle}) =>{\r\nreturn(\r\n    <svg width=\"250%\" viewBox=\"0 0 200 100\">\r\n    <g transform=\"translate(0,-197)\">\r\n    <path stroke={stroke} fill={fillStyle} d=\"m6.6546 249.67 94.993-36.191 92.756 37.667-93.875 36.32z\" strokeWidth=\"4px\"/>\r\n    </g></svg>\r\n)\r\n}\r\n\r\nconst StripedDiamonds = ({stroke, fillStyle}) =>{\r\nreturn(\r\n    <svg  width=\"250%\" viewBox=\"0 0 200 100\" stroke={stroke} fill={fillStyle} >\r\n    <g transform=\"translate(0,-197)\"strokeWidth=\"1.5px\">\r\n    <path d=\"m6.2766 248.16 94.993-36.191 92.756 37.667-93.875 36.32z\" strokeWidth=\"1.832px\"/>\r\n    <path d=\"m15.65 252.62 94.964-37.355\" />\r\n    <path d=\"m26.017 256.74 94.964-37.355\" />\r\n    <path d=\"m35.639 260.89 94.964-37.355\" />\r\n    <path d=\"m45.528 264.63 94.964-37.355\" />\r\n    <path d=\"m55.016 268.1 94.964-37.355\" />\r\n    <path d=\"m64.504 272.25 94.964-37.355\" />\r\n    <path d=\"m73.324 275.59 94.964-37.355\" />\r\n    <path d=\"m81.743 279.46 94.964-37.355\" />\r\n    <path d=\"m91.365 283.07 94.964-37.355\" />\r\n    </g>\r\n    </svg>\r\n)\r\n}\r\n\r\nexport {Diamonds, StripedDiamonds};","import React from 'react';\r\n\r\nconst Ovals = ({stroke, fillStyle}) =>{\r\nreturn(\r\n    <svg  width=\"250%\" viewBox=\"0 0 200 100\" stroke={stroke} fill={fillStyle}>\r\n    <g transform=\"translate(0,-197)\">\r\n    <path d=\"m38.133 208.52s124.74-1.9511 122.52-1.9511 36.252 8.7906 36.252 37.074c0 28.283-36.819 42.08-38.197 42.597-1.3782\r\n     0.5176-118.73-0.51758-118.73-0.51758s-36.031-9.8301-36.031-39.148c0-29.318 34.185-38.054 34.185-38.054z\"strokeWidth=\"4px\"/>\r\n    </g></svg>\r\n)}\r\n\r\nconst StripedOvals = ({stroke, fillStyle}) =>{\r\nreturn( \r\n    <svg  width=\"250%\" viewBox=\"0 0 200 100\" stroke={stroke} fill={fillStyle}>\r\n        <g transform=\"translate(0,-197)\" strokeWidth=\"1.5px\">\r\n        <path d=\"m38.133 209.65s124.74-1.9511 122.52-1.9511 36.252 8.7906 36.252 37.074c0 28.283-36.819 42.08-38.197 42.597-1.3782 0.5176-118.73-0.51758-118.73-0.51758s-36.031-9.8301-36.031-39.148c0-29.318 34.185-38.054 34.185-38.054z\" strokeWidth=\"2.0638px\"/>\r\n        <path d=\"m6.0113 257.53 116.91-48.696\" />\r\n        <path d=\"m8.4453 264.61 133.22-55.882\" />\r\n        <path d=\"m12.268 270.22 150.73-61.05\" />\r\n        <path d=\"m15.947 275.28 157.6-61.806\" />\r\n        <path d=\"m23.644 279.52 158.15-61.437\" />\r\n        <path d=\"m32.833 284.14 154.39-61.363\" />\r\n        <path d=\"m45.092 287.29 147.07-58.812\" />\r\n        <path d=\"m56.549 287.06 138.29-52.807\" />\r\n        <path d=\"m76.483 286.88 120.26-45.474\" />\r\n        <path d=\"m93.404 287.01 103.52-38.044\" />\r\n        <path d=\"m110.19 287.14 85.374-32.13\" />\r\n        <path d=\"m3.9905 249.62 100.43-40.409\" />\r\n        <path d=\"m129.1 287.42 61.558-23.593\" />\r\n        <path d=\"m5.092 239.79 81.719-30.988\" />\r\n        <path d=\"m9.498 230.73 56.33-21.296\" />\r\n        <path d=\"m14.292 222.22 34.321-12.788\" />\r\n        <path d=\"m142.01 287.42 40.31-14.373\" />\r\n        <path d=\"m9.498 230.73 52.896-20.405\" />\r\n        </g></svg>\r\n)}\r\n\r\nexport {Ovals, StripedOvals};","import React from 'react';\r\nimport './Symbols.css';\r\nimport {Squiggles, StripedSquiggles} from './Squiggles.js';\r\nimport {Diamonds, StripedDiamonds} from './Diamonds.js';\r\nimport {Ovals, StripedOvals} from './Ovals.js';\r\n\r\nconst Symbols = (props) =>{\r\n    const {color, symbol, fill} = props;\r\n    let output;\r\n    let fillStyle;\r\n    fill === 'solid' ? fillStyle = color :  fillStyle = 'none';\r\n\r\n\r\n    if(symbol === \"squiggles\") fill !== 'striped' \r\n        ? output = <Squiggles stroke={color} fillStyle={fillStyle} /> : output = <StripedSquiggles stroke={color} fillStyle={fillStyle} />;\r\n    else if(symbol === \"diamonds\") fill !== 'striped' \r\n        ? output = <Diamonds stroke={color} fillStyle={fillStyle} /> : output = <StripedDiamonds stroke={color} fillStyle={fillStyle} />;\r\n    else if(symbol === \"ovals\") fill !== 'striped' \r\n        ? output =<Ovals stroke={color} fillStyle={fillStyle} /> : output = <StripedOvals stroke={color}fillStyle={fillStyle} />;\r\n\r\n   return (\r\n        <div className='svgContainer'>\r\n            {output}\r\n        </div>);\r\n}\r\n\r\nexport default Symbols;","import React from 'react';\r\nimport './Card.css';\r\nimport Symbols from '../symbols/Symbols.js';\r\n\r\nconst Card = ({card, click}) =>{\r\n\r\n        const out = [];\r\n        for(let i = 0; i < card.quantity; i++) out.push \r\n        \r\n        (<Symbols color = {card.color} symbol = {card.symbol} fill={card.fill} key={card.id+''+i} /> )\r\n        \r\n        return(\r\n                <div className='card' onClick={click} id={card.id}>\r\n                        {out}\r\n                </div>\r\n        );\r\n};\r\nexport default Card;","import React, {useContext, useEffect} from 'react';\r\nimport {InfoContext} from './InfoContext';\r\nimport Table from './Table/Table';\r\nimport Scoreboard from './Scoreboard/Scoreboard';\r\nimport './Game.css';\r\n\r\nconst Game = ({history}) =>{\r\n    const [nickName, setNickName] = useContext(InfoContext);\r\n\r\n    useEffect(()=>{\r\n        if(nickName === 'init') history.push('/');\r\n    });\r\n\r\n    return (\r\n    <div className='Game' >\r\n        <Table  history={history} />\r\n        <Scoreboard />\r\n        \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport {InfoProvider} from './components/InfoContext';\r\nimport {ScoreProvider} from './components/ScoreContext';\r\nimport Rooms from './components/Rooms';\r\nimport Game from './components/Game';\r\n\r\nconst App = () =>(\r\n<InfoProvider>\r\n    <ScoreProvider>\r\n        <Router>\r\n            <Route path='/' exact component={Rooms}/>\r\n            <Route path='/game' exact component={Game}/>\r\n        </Router>\r\n    </ScoreProvider>\r\n</InfoProvider>\r\n);\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}